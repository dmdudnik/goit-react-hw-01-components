{"version":3,"sources":["components/ProfileStats/ProfileStats.module.css","components/Statistics/Statistics.module.css","components/FriendListItem/FriendListItem.module.css","components/ProfileDescription/ProfileDescription.module.css","components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/ProfileDescription/ProfileDescription.jsx","components/ProfileStats/ProfileStats.jsx","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ProfileDescription","name","tag","location","avatar","className","src","alt","css","text","ProfileStats","followers","views","likes","list","item","label","value","Profile","profile","user","stats","Statistics","title","map","stat","percentage","id","FriendListItem","isOnline","onstatus","offstatus","width","FriendList","friends","friendlist","friend","App","statisticData","friendsData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.369ea1ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ProfileStats_list__3eBqP\",\"item\":\"ProfileStats_item__34djc\",\"label\":\"ProfileStats_label__3r4BQ\",\"value\":\"ProfileStats_value__1fksn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__9IGiy\",\"list\":\"Statistics_list__2ngD0\",\"item\":\"Statistics_item__1ozQw\",\"label\":\"Statistics_label__KYcgU\",\"percentage\":\"Statistics_percentage__37FaP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__1Qgvz\",\"onstatus\":\"FriendListItem_onstatus__92d9o\",\"offstatus\":\"FriendListItem_offstatus__usTYT\",\"avatar\":\"FriendListItem_avatar__2lzjb\",\"name\":\"FriendListItem_name__2bfSh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"ProfileDescription_description__1ik30\",\"avatar\":\"ProfileDescription_avatar__2LPfd\",\"name\":\"ProfileDescription_name__1hA76\",\"text\":\"ProfileDescription_text__26MVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2l182\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"FriendList_friendlist__1UV6m\"};","import css from './ProfileDescription.module.css'\r\nexport const ProfileDescription = ({ name, tag, location, avatar }) => {\r\n    return (\r\n        <div className ='description'>\r\n            <img src={avatar} alt=\"Аватар\" className={ css.avatar}/>\r\n            <p className={ css.name}>{name} </p>\r\n            <p className={ css.text}>@{tag}</p>\r\n            <p className={ css.text}>{location}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import css from './ProfileStats.module.css';\r\n\r\nfunction ProfileStats({ followers, views, likes }) {\r\n    return (\r\n        <ul className={css.list}>\r\n            <li className={css.item}>\r\n                <span className ={css.label}>followers</span>\r\n                <span className ={css.value}>{followers}</span>\r\n            </li>\r\n            <li className={css.item}>\r\n                <span className ={css.label}>views</span>\r\n                <span className ={css.value}>{views}</span>\r\n            </li>\r\n            <li className={css.item}>\r\n                <span className ={css.label}>likes</span>\r\n               <span className ={css.value}>{likes}</span>\r\n                </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ProfileStats\r\n","import user from '../../data/user.json';\r\nimport css from './Profile.module.css';\r\nimport {ProfileDescription} from '../ProfileDescription/ProfileDescription'\r\nimport ProfileStats from '../ProfileStats/ProfileStats'\r\nexport const Profile = () => {\r\n    return (\r\n        <div className={css.profile}>\r\n            <ProfileDescription\r\n            avatar={user.avatar}\r\n                name={user.name}\r\n                tag={user.tag}\r\n                location={user.location}\r\n            />\r\n            <ProfileStats\r\n                followers={user.stats.followers}\r\n                views={user.stats.views}\r\n                likes={user.stats.likes}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport css from './Statistics.module.css'\r\n \r\n\r\n\r\nexport const Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className=\"statistics\">\r\n     \r\n      <h2 className = { css.title } > { title }</h2>\r\n\r\n      <ul className = { css.list } >\r\n        {stats.map(stat => (\r\n          \r\n          <li className={css.item} key={stat.id} >\r\n            <span className={css.label}>{stat.label}</span>\r\n            <span className={css.percentage}>{stat.percentage}%</span>\r\n          </li>\r\n        ))}\r\n        \r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  label: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n\r\n\r\n};","//import PropTypes from 'prop-types';\r\nimport css from '../FriendListItem/FriendListItem.module.css';\r\n\r\nexport const FriendListItem = ({ avatar, name, isOnline }) => {\r\n    return (\r\n        <li className={css.item} >\r\n\r\n            \r\n            <span className={isOnline? css.onstatus: css.offstatus}>\r\n            {isOnline}</span>\r\n            <img className={ css.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={ css.name}>{name}</p>\r\n</li>\r\n    )\r\n}\r\n\r\n// FriendListItem.PropTypes = {\r\n//     isOnline: PropTypes.bool,\r\n//     avatar: PropTypes.string,\r\n//     name: PropTypes.string,\r\n\r\n// }\r\n\r\n\r\n","\r\nimport { FriendListItem } from '../FriendListItem/FriendListItem';\r\nimport css from '../FriendList/FriendList.module.css';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={css.friendlist}>\r\n            {friends.map(friend => (\r\n                <FriendListItem\r\n                    avatar={friend.avatar}\r\n                    name={friend.name}\r\n                    isOnline={friend.isOnline}\r\n                    / >\r\n            \r\n            ))}\r\n            \r\n  \r\n</ul>\r\n    )\r\n}","import { Profile } from './components/Profile/Profile';\nimport { Statistics } from './components/Statistics/Statistics';\nimport { FriendList } from './components/FriendList/FriendList';\nimport statisticData from '../src/data/statistical-data.json';\nimport friendsData from '../src/data/friends.json';\nimport './App.css';\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Profile />\n      <Statistics title=\"Upload stats\" stats={statisticData} />\n      <FriendList friends={friendsData} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}